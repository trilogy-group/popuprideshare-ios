// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef RWRIDER_SWIFT_H
#define RWRIDER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import GoogleMaps;
@import ObjectiveC;
@import RWRiderSDKAPI;
@import UIKit;
#endif

#import <RWRider/RWRider.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RWRider",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class NSNumber;
enum RegistrationMethod : NSInteger;

SWIFT_CLASS("_TtC7RWRider16AppConfiguration")
@interface AppConfiguration : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AppConfiguration * _Nonnull sharedInstance;)
+ (AppConfiguration * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nullable clientCode;
@property (nonatomic, readonly, copy) NSString * _Nullable googleMapKey;
@property (nonatomic, readonly, copy) NSString * _Nullable googleMapDirectionKey;
@property (nonatomic, readonly, copy) NSString * _Nullable stripeKey;
@property (nonatomic, readonly, copy) NSString * _Nullable appleMerchantIdentifier;
@property (nonatomic, readonly, copy) NSString * _Nullable apiKey;
@property (nonatomic, readonly, copy) NSString * _Nullable bugFenderKey;
@property (nonatomic, readonly, copy) NSString * _Nullable md5PasswordSalt;
@property (nonatomic, readonly, copy) NSString * _Nullable productionServerURL;
@property (nonatomic, readonly, copy) NSString * _Nullable qaServerURL;
@property (nonatomic, readonly, copy) NSString * _Nullable stageServerURL;
@property (nonatomic, readonly, copy) NSString * _Nullable devServerURL;
@property (nonatomic, readonly, copy) NSString * _Nullable featureServerURL;
@property (nonatomic, readonly) BOOL enableDriverRegistration;
@property (nonatomic, readonly) BOOL enablePromocode;
@property (nonatomic, readonly) BOOL enableCampaign;
@property (nonatomic, readonly) enum RegistrationMethod registrationMethod;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class ConfigRegistration;
@class DSDriver;
@class DSCar;
@class DSLicenseViewModel;
@class DSCarInsuranceViewModel;
@class DSDriverPhotoViewModel;
@class DSChauffeurViewModel;
@class DSInspectionStickerViewModel;
@class DSCarInfoViewModel;
@class DSCarLicensePlateViewModel;
@class DSCarIsAddedViewModel;
@class DSCarPhotoViewModel;
@class RACity;
@class RACityDetail;

SWIFT_CLASS("_TtC7RWRider16DSFlowController")
@interface DSFlowController : NSObject
@property (nonatomic, strong) ConfigRegistration * _Nullable regConfig;
@property (nonatomic, strong) DSDriver * _Nonnull driver;
@property (nonatomic, strong) DSCar * _Nonnull car;
@property (nonatomic, strong) DSLicenseViewModel * _Null_unspecified licenseViewModel;
@property (nonatomic, strong) DSCarInsuranceViewModel * _Null_unspecified insuranceViewModel;
@property (nonatomic, strong) DSDriverPhotoViewModel * _Null_unspecified driverPhotoViewModel;
@property (nonatomic, strong) DSChauffeurViewModel * _Null_unspecified chauffeurViewModel;
@property (nonatomic, strong) DSInspectionStickerViewModel * _Null_unspecified inspectionStickerViewModel;
@property (nonatomic, strong) DSCarInfoViewModel * _Null_unspecified carInfoViewModel;
@property (nonatomic, strong) DSCarLicensePlateViewModel * _Null_unspecified carLicensePlateViewModel;
@property (nonatomic, strong) DSCarIsAddedViewModel * _Null_unspecified carIsAddedViewModel;
@property (nonatomic, strong) DSCarPhotoViewModel * _Null_unspecified frontPhotoViewModel;
@property (nonatomic, strong) DSCarPhotoViewModel * _Null_unspecified backPhotoViewModel;
@property (nonatomic, strong) DSCarPhotoViewModel * _Null_unspecified insidePhotoViewModel;
@property (nonatomic, strong) DSCarPhotoViewModel * _Null_unspecified trunkPhotoViewModel;
- (void)endDriverSignup;
- (void)updateWithCity:(RACity * _Nonnull)city detail:(RACityDetail * _Nonnull)detail;
- (void)submitRegistrationWithCompletion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface DSFlowController (SWIFT_EXTENSION(RWRider))
- (void)showNextScreenFromScreen:(DSScreen)fromScreen;
@end


@class RARideLocationDataModel;
@class NSCoder;
@class NSBundle;

SWIFT_CLASS("_TtC7RWRider28LocationPickerViewController")
@interface LocationPickerViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithFieldType:(RAPickerAddressFieldType)fieldType completion:(void (^ _Nonnull)(RAPickerAddressFieldType, RARideLocationDataModel * _Nullable, BOOL))completion OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class GMSMapView;
@class GMSOverlay;
@class GMSCameraPosition;

@interface LocationPickerViewController (SWIFT_EXTENSION(RWRider)) <GMSMapViewDelegate>
- (void)mapView:(GMSMapView * _Nonnull)mapView didTapOverlay:(GMSOverlay * _Nonnull)overlay;
- (void)mapView:(GMSMapView * _Nonnull)mapView idleAtCameraPosition:(GMSCameraPosition * _Nonnull)position;
- (void)mapView:(GMSMapView * _Nonnull)mapView didChangeCameraPosition:(GMSCameraPosition * _Nonnull)position;
@end

@protocol MRCountryPickerDelegate;
@class UIView;

SWIFT_CLASS("_TtC7RWRider15MRCountryPicker")
@interface MRCountryPicker : UIPickerView <UIPickerViewDataSource, UIPickerViewDelegate>
@property (nonatomic, weak) id <MRCountryPickerDelegate> _Nullable countryPickerDelegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setCountry:(NSString * _Nonnull)code;
- (void)setCountryByPhoneCode:(NSString * _Nonnull)phoneCode;
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)pickerView:(UIPickerView * _Nonnull)pickerView viewForRow:(NSInteger)row forComponent:(NSInteger)component reusingView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
@end

@class UIImage;

SWIFT_PROTOCOL("_TtP7RWRider23MRCountryPickerDelegate_")
@protocol MRCountryPickerDelegate
- (void)countryPhoneCodePicker:(MRCountryPicker * _Nonnull)picker didSelectCountryWithName:(NSString * _Nonnull)name countryCode:(NSString * _Nonnull)countryCode phoneCode:(NSString * _Nonnull)phoneCode flag:(UIImage * _Nonnull)flag;
@end


SWIFT_CLASS("_TtC7RWRider21PaymentViewController")
@interface PaymentViewController : BaseViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@end

@class UITableView;
@class NSIndexPath;

@interface PaymentViewController (SWIFT_EXTENSION(RWRider)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UITableViewCell;

@interface PaymentViewController (SWIFT_EXTENSION(RWRider)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class RWRiderRegisterInfo;

SWIFT_CLASS("_TtC7RWRider13RWRiderConfig")
@interface RWRiderConfig : NSObject
@property (nonatomic, copy) NSString * _Nonnull clientCode;
@property (nonatomic, strong) RWRiderRegisterInfo * _Nullable registerInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7RWRider19RWRiderRegisterInfo")
@interface RWRiderRegisterInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, copy) NSString * _Nullable email;
- (nonnull instancetype)initWithFirstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName email:(NSString * _Nullable)email OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UNNotificationResponse;

SWIFT_CLASS("_TtC7RWRider14RWRiderWrapper")
@interface RWRiderWrapper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RWRiderWrapper * _Nonnull sharedInstance;)
+ (RWRiderWrapper * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) RWRiderConfig * _Nullable rwRiderConfig;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isPopupRiderNotificationWithResponse:(UNNotificationResponse * _Nonnull)response SWIFT_WARN_UNUSED_RESULT;
- (void)processPopupRiderNotificationWithResponse:(UNNotificationResponse * _Nonnull)response;
- (void)registerForPushNotificationWithDelegate:(id _Nullable)delegate;
@end

typedef SWIFT_ENUM(NSInteger, RegistrationMethod, open) {
  RegistrationMethodOTP = 1,
  RegistrationMethodPasssword = 2,
  RegistrationMethodPasswordWithOTP = 3,
};


@interface UIButton (SWIFT_EXTENSION(RWRider))
- (void)applyGradientBGColor;
@end









@interface UIImage (SWIFT_EXTENSION(RWRider))
+ (UIImage * _Nonnull)imageFromFrameworkWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
@end





@class CAGradientLayer;

@interface UITextField (SWIFT_EXTENSION(RWRider))
- (CAGradientLayer * _Nonnull)newGradientBorderLayerWithCornerRadius:(CGFloat)cornerRadius SWIFT_WARN_UNUSED_RESULT;
- (void)applyGradientBorderColorWithGradientBorderLayer:(CAGradientLayer * _Nonnull)gradientBorderLayer;
@end


@interface UIView (SWIFT_EXTENSION(RWRider))
- (void)applyVerticalGradientBGColor;
- (void)applyHorizontalGradientBGColor;
- (void)applyHorizontalGradientBGColorWithWidthScale:(CGFloat)widthScale;
- (void)applyGrayBorderColor;
- (void)applyRoundedWhiteBGColor;
- (void)applyRoundedBGColorWithRadius:(CGFloat)radius bgColor:(NSUInteger)bgColor borderWidth:(CGFloat)borderWidth borderColor:(NSUInteger)borderColor;
- (void)applyFocusShadowWithOpacity:(float)opacity;
- (void)removeFocusShadow;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
